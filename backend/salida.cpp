/*------HEADER------*/
#include <stdio.h>
#include <math.h>
double heap[30101999];
double stack[30101999];
double P;
double H;
double t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20, t21, t22, t23, t24, t25, t26, t27, t28, t29, t30, t31, t32, t33, t34, t35, t36, t37, t38, t39, t40, t41, t42, t43, t44, t45, t46, t47, t48, t49, t50, t51, t52, t53, t54, t55, t56, t57, t58, t59, t60, t61, t62, t63, t64, t65, t66, t67, t68, t69, t70, t71, t72, t73, t74, t75, t76, t77, t78, t79, t80, t81, t82, t83, t84, t85, t86, t87, t88, t89, t90, t91, t92, t93, t94, t95, t96, t97, t98, t99, t100, t101, t102, t103, t104, t105, t106, t107, t108, t109, t110, t111, t112, t113, t114, t115, t116, t117, t118, t119, t120, t121, t122, t123, t124, t125, t126, t127, t128, t129, t130, t131, t132, t133, t134, t135, t136, t137, t138, t139, t140, t141, t142, t143, t144, t145, t146, t147, t148, t149, t150, t151, t152, t153, t154, t155, t156, t157, t158, t159, t160, t161, t162, t163, t164, t165, t166, t167, t168, t169, t170, t171, t172, t173, t174, t175, t176, t177, t178, t179, t180, t181, t182, t183, t184, t185, t186, t187, t188, t189, t190, t191, t192, t193, t194, t195, t196, t197, t198, t199, t200, t201, t202, t203, t204, t205, t206, t207, t208, t209, t210, t211, t212, t213, t214, t215, t216, t217, t218, t219, t220, t221, t222, t223, t224, t225, t226, t227, t228, t229, t230, t231, t232, t233, t234, t235, t236, t237, t238, t239, t240, t241, t242, t243, t244, t245, t246, t247, t248, t249, t250, t251, t252, t253, t254, t255, t256;

/*------NATIVES------*/
void dbrust_printString() {
	t1 = P + 1;
	t2 = stack[(int)t1];
	L1:
	t3 = heap[(int)t2];
	if(t3 == -1) goto L0;
	printf("%c", (char)t3);
	t2 = t2 + 1;
	goto L1;
	L0:
	return;
}

/*------MAIN------*/
int main() {
	P = 0; H = 0;

	t0 = H;
	heap[(int)H] = 45;
	H = H + 1;
	heap[(int)H] = 45;
	H = H + 1;
	heap[(int)H] = 45;
	H = H + 1;
	heap[(int)H] = 45;
	H = H + 1;
	heap[(int)H] = 45;
	H = H + 1;
	heap[(int)H] = 45;
	H = H + 1;
	heap[(int)H] = 45;
	H = H + 1;
	heap[(int)H] = 45;
	H = H + 1;
	heap[(int)H] = 45;
	H = H + 1;
	heap[(int)H] = 45;
	H = H + 1;
	heap[(int)H] = 45;
	H = H + 1;
	heap[(int)H] = 45;
	H = H + 1;
	heap[(int)H] = 45;
	H = H + 1;
	heap[(int)H] = 45;
	H = H + 1;
	heap[(int)H] = 45;
	H = H + 1;
	heap[(int)H] = 45;
	H = H + 1;
	heap[(int)H] = 45;
	H = H + 1;
	heap[(int)H] = 45;
	H = H + 1;
	heap[(int)H] = 45;
	H = H + 1;
	heap[(int)H] = 45;
	H = H + 1;
	heap[(int)H] = 45;
	H = H + 1;
	heap[(int)H] = 45;
	H = H + 1;
	heap[(int)H] = 45;
	H = H + 1;
	heap[(int)H] = 45;
	H = H + 1;
	heap[(int)H] = 45;
	H = H + 1;
	heap[(int)H] = 45;
	H = H + 1;
	heap[(int)H] = -1;
	H = H + 1;
	
	t4 = P + 0;
	t4 = t4 + 1;
	stack[(int)t4] = t0;
	P = P + 0;
	dbrust_printString();
	t5 = stack[(int)P];
	P = P - 0;
	printf("%c", 32);
	
	printf("%c", 10);
	t6 = H;
	heap[(int)H] = 45;
	H = H + 1;
	heap[(int)H] = 45;
	H = H + 1;
	heap[(int)H] = 45;
	H = H + 1;
	heap[(int)H] = 45;
	H = H + 1;
	heap[(int)H] = 65;
	H = H + 1;
	heap[(int)H] = 82;
	H = H + 1;
	heap[(int)H] = 67;
	H = H + 1;
	heap[(int)H] = 72;
	H = H + 1;
	heap[(int)H] = 73;
	H = H + 1;
	heap[(int)H] = 86;
	H = H + 1;
	heap[(int)H] = 79;
	H = H + 1;
	heap[(int)H] = 32;
	H = H + 1;
	heap[(int)H] = 73;
	H = H + 1;
	heap[(int)H] = 78;
	H = H + 1;
	heap[(int)H] = 84;
	H = H + 1;
	heap[(int)H] = 69;
	H = H + 1;
	heap[(int)H] = 82;
	H = H + 1;
	heap[(int)H] = 77;
	H = H + 1;
	heap[(int)H] = 69;
	H = H + 1;
	heap[(int)H] = 68;
	H = H + 1;
	heap[(int)H] = 73;
	H = H + 1;
	heap[(int)H] = 79;
	H = H + 1;
	heap[(int)H] = 45;
	H = H + 1;
	heap[(int)H] = 45;
	H = H + 1;
	heap[(int)H] = 45;
	H = H + 1;
	heap[(int)H] = 45;
	H = H + 1;
	heap[(int)H] = -1;
	H = H + 1;
	
	t7 = P + 0;
	t7 = t7 + 1;
	stack[(int)t7] = t6;
	P = P + 0;
	dbrust_printString();
	t8 = stack[(int)P];
	P = P - 0;
	printf("%c", 32);
	
	printf("%c", 10);
	t9 = H;
	heap[(int)H] = 45;
	H = H + 1;
	heap[(int)H] = 45;
	H = H + 1;
	heap[(int)H] = 45;
	H = H + 1;
	heap[(int)H] = 45;
	H = H + 1;
	heap[(int)H] = 45;
	H = H + 1;
	heap[(int)H] = 45;
	H = H + 1;
	heap[(int)H] = 45;
	H = H + 1;
	heap[(int)H] = 45;
	H = H + 1;
	heap[(int)H] = 45;
	H = H + 1;
	heap[(int)H] = 45;
	H = H + 1;
	heap[(int)H] = 49;
	H = H + 1;
	heap[(int)H] = 48;
	H = H + 1;
	heap[(int)H] = 32;
	H = H + 1;
	heap[(int)H] = 112;
	H = H + 1;
	heap[(int)H] = 116;
	H = H + 1;
	heap[(int)H] = 115;
	H = H + 1;
	heap[(int)H] = 45;
	H = H + 1;
	heap[(int)H] = 45;
	H = H + 1;
	heap[(int)H] = 45;
	H = H + 1;
	heap[(int)H] = 45;
	H = H + 1;
	heap[(int)H] = 45;
	H = H + 1;
	heap[(int)H] = 45;
	H = H + 1;
	heap[(int)H] = 45;
	H = H + 1;
	heap[(int)H] = 45;
	H = H + 1;
	heap[(int)H] = 45;
	H = H + 1;
	heap[(int)H] = 45;
	H = H + 1;
	heap[(int)H] = -1;
	H = H + 1;
	
	t10 = P + 0;
	t10 = t10 + 1;
	stack[(int)t10] = t9;
	P = P + 0;
	dbrust_printString();
	t11 = stack[(int)P];
	P = P - 0;
	printf("%c", 32);
	
	printf("%c", 10);
	t12 = H;
	heap[(int)H] = 45;
	H = H + 1;
	heap[(int)H] = 45;
	H = H + 1;
	heap[(int)H] = 45;
	H = H + 1;
	heap[(int)H] = 45;
	H = H + 1;
	heap[(int)H] = 45;
	H = H + 1;
	heap[(int)H] = 45;
	H = H + 1;
	heap[(int)H] = 45;
	H = H + 1;
	heap[(int)H] = 45;
	H = H + 1;
	heap[(int)H] = 45;
	H = H + 1;
	heap[(int)H] = 45;
	H = H + 1;
	heap[(int)H] = 45;
	H = H + 1;
	heap[(int)H] = 45;
	H = H + 1;
	heap[(int)H] = 45;
	H = H + 1;
	heap[(int)H] = 45;
	H = H + 1;
	heap[(int)H] = 45;
	H = H + 1;
	heap[(int)H] = 45;
	H = H + 1;
	heap[(int)H] = 45;
	H = H + 1;
	heap[(int)H] = 45;
	H = H + 1;
	heap[(int)H] = 45;
	H = H + 1;
	heap[(int)H] = 45;
	H = H + 1;
	heap[(int)H] = 45;
	H = H + 1;
	heap[(int)H] = 45;
	H = H + 1;
	heap[(int)H] = 45;
	H = H + 1;
	heap[(int)H] = 45;
	H = H + 1;
	heap[(int)H] = 45;
	H = H + 1;
	heap[(int)H] = 45;
	H = H + 1;
	heap[(int)H] = -1;
	H = H + 1;
	
	t13 = P + 0;
	t13 = t13 + 1;
	stack[(int)t13] = t12;
	P = P + 0;
	dbrust_printString();
	t14 = stack[(int)P];
	P = P - 0;
	printf("%c", 32);
	
	printf("%c", 10);
	t15 = H;
	heap[(int)H] = -1;
	H = H + 1;
	
	t16 = P + 0;
	t16 = t16 + 1;
	stack[(int)t16] = t15;
	P = P + 0;
	dbrust_printString();
	t17 = stack[(int)P];
	P = P - 0;
	printf("%c", 32);
	
	printf("%c", 10);
	t18 = H;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = -1;
	H = H + 1;
	
	t19 = P + 0;
	t19 = t19 + 1;
	stack[(int)t19] = t18;
	P = P + 0;
	dbrust_printString();
	t20 = stack[(int)P];
	P = P - 0;
	printf("%c", 32);
	
	printf("%c", 10);
	t21 = H;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 73;
	H = H + 1;
	heap[(int)H] = 70;
	H = H + 1;
	heap[(int)H] = 115;
	H = H + 1;
	heap[(int)H] = 32;
	H = H + 1;
	heap[(int)H] = 65;
	H = H + 1;
	heap[(int)H] = 78;
	H = H + 1;
	heap[(int)H] = 73;
	H = H + 1;
	heap[(int)H] = 68;
	H = H + 1;
	heap[(int)H] = 65;
	H = H + 1;
	heap[(int)H] = 68;
	H = H + 1;
	heap[(int)H] = 79;
	H = H + 1;
	heap[(int)H] = 83;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = -1;
	H = H + 1;
	
	t22 = P + 0;
	t22 = t22 + 1;
	stack[(int)t22] = t21;
	P = P + 0;
	dbrust_printString();
	t23 = stack[(int)P];
	P = P - 0;
	printf("%c", 32);
	
	printf("%c", 10);
	t24 = H;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = -1;
	H = H + 1;
	
	t25 = P + 0;
	t25 = t25 + 1;
	stack[(int)t25] = t24;
	P = P + 0;
	dbrust_printString();
	t26 = stack[(int)P];
	P = P - 0;
	printf("%c", 32);
	
	printf("%c", 10);
	t27 = P + 0;
	stack[(int)t27] = 909;
	
	t28 = P + 1;
	stack[(int)t28] = 10;
	
	t31 = P - 0;
	t29 = t31 + 1;
	t30 = stack[(int)t29];
	if(t30 > 0) goto L2;
	goto L3;
	L2:
	P = P + 2;
	t32 = H;
	heap[(int)H] = 80;
	H = H + 1;
	heap[(int)H] = 82;
	H = H + 1;
	heap[(int)H] = 73;
	H = H + 1;
	heap[(int)H] = 77;
	H = H + 1;
	heap[(int)H] = 69;
	H = H + 1;
	heap[(int)H] = 82;
	H = H + 1;
	heap[(int)H] = 32;
	H = H + 1;
	heap[(int)H] = 73;
	H = H + 1;
	heap[(int)H] = 70;
	H = H + 1;
	heap[(int)H] = 32;
	H = H + 1;
	heap[(int)H] = 67;
	H = H + 1;
	heap[(int)H] = 79;
	H = H + 1;
	heap[(int)H] = 82;
	H = H + 1;
	heap[(int)H] = 82;
	H = H + 1;
	heap[(int)H] = 69;
	H = H + 1;
	heap[(int)H] = 67;
	H = H + 1;
	heap[(int)H] = 84;
	H = H + 1;
	heap[(int)H] = 79;
	H = H + 1;
	heap[(int)H] = -1;
	H = H + 1;
	
	t33 = P + 2;
	t33 = t33 + 1;
	stack[(int)t33] = t32;
	P = P + 2;
	dbrust_printString();
	t34 = stack[(int)P];
	P = P - 2;
	printf("%c", 32);
	
	printf("%c", 10);
	goto L5;
	L5:
	t37 = P - 0;
	t35 = t37 + 1;
	t36 = stack[(int)t35];
	if(t36 == 1) goto L7;
	goto L8;
	L7:
	P = P + 2;
	t38 = H;
	heap[(int)H] = 83;
	H = H + 1;
	heap[(int)H] = 69;
	H = H + 1;
	heap[(int)H] = 71;
	H = H + 1;
	heap[(int)H] = 85;
	H = H + 1;
	heap[(int)H] = 78;
	H = H + 1;
	heap[(int)H] = 68;
	H = H + 1;
	heap[(int)H] = 79;
	H = H + 1;
	heap[(int)H] = 32;
	H = H + 1;
	heap[(int)H] = 73;
	H = H + 1;
	heap[(int)H] = 70;
	H = H + 1;
	heap[(int)H] = 32;
	H = H + 1;
	heap[(int)H] = 73;
	H = H + 1;
	heap[(int)H] = 78;
	H = H + 1;
	heap[(int)H] = 67;
	H = H + 1;
	heap[(int)H] = 79;
	H = H + 1;
	heap[(int)H] = 82;
	H = H + 1;
	heap[(int)H] = 82;
	H = H + 1;
	heap[(int)H] = 69;
	H = H + 1;
	heap[(int)H] = 67;
	H = H + 1;
	heap[(int)H] = 84;
	H = H + 1;
	heap[(int)H] = 79;
	H = H + 1;
	heap[(int)H] = -1;
	H = H + 1;
	
	t39 = P + 2;
	t39 = t39 + 1;
	stack[(int)t39] = t38;
	P = P + 2;
	dbrust_printString();
	t40 = stack[(int)P];
	P = P - 2;
	printf("%c", 32);
	
	printf("%c", 10);
	P = P - 2;
	goto L9;
	L8:
	L6:
	t43 = P - 0;
	t41 = t43 + 1;
	t42 = stack[(int)t41];
	if(t42 > 10) goto L10;
	goto L11;
	L10:
	P = P + 2;
	t44 = H;
	heap[(int)H] = 83;
	H = H + 1;
	heap[(int)H] = 69;
	H = H + 1;
	heap[(int)H] = 71;
	H = H + 1;
	heap[(int)H] = 85;
	H = H + 1;
	heap[(int)H] = 78;
	H = H + 1;
	heap[(int)H] = 68;
	H = H + 1;
	heap[(int)H] = 79;
	H = H + 1;
	heap[(int)H] = 32;
	H = H + 1;
	heap[(int)H] = 73;
	H = H + 1;
	heap[(int)H] = 70;
	H = H + 1;
	heap[(int)H] = 32;
	H = H + 1;
	heap[(int)H] = 73;
	H = H + 1;
	heap[(int)H] = 78;
	H = H + 1;
	heap[(int)H] = 67;
	H = H + 1;
	heap[(int)H] = 79;
	H = H + 1;
	heap[(int)H] = 82;
	H = H + 1;
	heap[(int)H] = 82;
	H = H + 1;
	heap[(int)H] = 69;
	H = H + 1;
	heap[(int)H] = 67;
	H = H + 1;
	heap[(int)H] = 84;
	H = H + 1;
	heap[(int)H] = 79;
	H = H + 1;
	heap[(int)H] = -1;
	H = H + 1;
	
	t45 = P + 2;
	t45 = t45 + 1;
	stack[(int)t45] = t44;
	P = P + 2;
	dbrust_printString();
	t46 = stack[(int)P];
	P = P - 2;
	printf("%c", 32);
	
	printf("%c", 10);
	P = P - 2;
	goto L12;
	L11:
	P = P + 2;
	t47 = H;
	heap[(int)H] = 83;
	H = H + 1;
	heap[(int)H] = 69;
	H = H + 1;
	heap[(int)H] = 71;
	H = H + 1;
	heap[(int)H] = 85;
	H = H + 1;
	heap[(int)H] = 78;
	H = H + 1;
	heap[(int)H] = 68;
	H = H + 1;
	heap[(int)H] = 79;
	H = H + 1;
	heap[(int)H] = 32;
	H = H + 1;
	heap[(int)H] = 73;
	H = H + 1;
	heap[(int)H] = 70;
	H = H + 1;
	heap[(int)H] = 32;
	H = H + 1;
	heap[(int)H] = 67;
	H = H + 1;
	heap[(int)H] = 79;
	H = H + 1;
	heap[(int)H] = 82;
	H = H + 1;
	heap[(int)H] = 82;
	H = H + 1;
	heap[(int)H] = 69;
	H = H + 1;
	heap[(int)H] = 67;
	H = H + 1;
	heap[(int)H] = 84;
	H = H + 1;
	heap[(int)H] = 79;
	H = H + 1;
	heap[(int)H] = -1;
	H = H + 1;
	
	t48 = P + 2;
	t48 = t48 + 1;
	stack[(int)t48] = t47;
	P = P + 2;
	dbrust_printString();
	t49 = stack[(int)P];
	P = P - 2;
	printf("%c", 32);
	
	printf("%c", 10);
	P = P - 2;
	goto L12;
	L12:
	goto L9;
	L9:
	P = P - 2;
	goto L4;
	L3:
	t52 = P - 0;
	t50 = t52 + 1;
	t51 = stack[(int)t50];
	if(t51 <= 3) goto L13;
	goto L14;
	L13:
	P = P + 2;
	t53 = H;
	heap[(int)H] = 80;
	H = H + 1;
	heap[(int)H] = 82;
	H = H + 1;
	heap[(int)H] = 73;
	H = H + 1;
	heap[(int)H] = 77;
	H = H + 1;
	heap[(int)H] = 69;
	H = H + 1;
	heap[(int)H] = 82;
	H = H + 1;
	heap[(int)H] = 32;
	H = H + 1;
	heap[(int)H] = 73;
	H = H + 1;
	heap[(int)H] = 70;
	H = H + 1;
	heap[(int)H] = 32;
	H = H + 1;
	heap[(int)H] = 73;
	H = H + 1;
	heap[(int)H] = 78;
	H = H + 1;
	heap[(int)H] = 67;
	H = H + 1;
	heap[(int)H] = 79;
	H = H + 1;
	heap[(int)H] = 82;
	H = H + 1;
	heap[(int)H] = 82;
	H = H + 1;
	heap[(int)H] = 69;
	H = H + 1;
	heap[(int)H] = 67;
	H = H + 1;
	heap[(int)H] = 84;
	H = H + 1;
	heap[(int)H] = 79;
	H = H + 1;
	heap[(int)H] = -1;
	H = H + 1;
	
	t54 = P + 2;
	t54 = t54 + 1;
	stack[(int)t54] = t53;
	P = P + 2;
	dbrust_printString();
	t55 = stack[(int)P];
	P = P - 2;
	printf("%c", 32);
	
	printf("%c", 10);
	goto L16;
	L16:
	t58 = P - 0;
	t56 = t58 + 1;
	t57 = stack[(int)t56];
	if(t57 == 1) goto L18;
	goto L19;
	L18:
	P = P + 2;
	t59 = H;
	heap[(int)H] = 83;
	H = H + 1;
	heap[(int)H] = 69;
	H = H + 1;
	heap[(int)H] = 71;
	H = H + 1;
	heap[(int)H] = 85;
	H = H + 1;
	heap[(int)H] = 78;
	H = H + 1;
	heap[(int)H] = 68;
	H = H + 1;
	heap[(int)H] = 79;
	H = H + 1;
	heap[(int)H] = 32;
	H = H + 1;
	heap[(int)H] = 73;
	H = H + 1;
	heap[(int)H] = 70;
	H = H + 1;
	heap[(int)H] = 32;
	H = H + 1;
	heap[(int)H] = 73;
	H = H + 1;
	heap[(int)H] = 78;
	H = H + 1;
	heap[(int)H] = 67;
	H = H + 1;
	heap[(int)H] = 79;
	H = H + 1;
	heap[(int)H] = 82;
	H = H + 1;
	heap[(int)H] = 82;
	H = H + 1;
	heap[(int)H] = 69;
	H = H + 1;
	heap[(int)H] = 67;
	H = H + 1;
	heap[(int)H] = 84;
	H = H + 1;
	heap[(int)H] = 79;
	H = H + 1;
	heap[(int)H] = -1;
	H = H + 1;
	
	t60 = P + 2;
	t60 = t60 + 1;
	stack[(int)t60] = t59;
	P = P + 2;
	dbrust_printString();
	t61 = stack[(int)P];
	P = P - 2;
	printf("%c", 32);
	
	printf("%c", 10);
	P = P - 2;
	goto L20;
	L19:
	L17:
	t64 = P - 0;
	t62 = t64 + 1;
	t63 = stack[(int)t62];
	if(t63 > 10) goto L21;
	goto L22;
	L21:
	P = P + 2;
	t65 = H;
	heap[(int)H] = 83;
	H = H + 1;
	heap[(int)H] = 69;
	H = H + 1;
	heap[(int)H] = 71;
	H = H + 1;
	heap[(int)H] = 85;
	H = H + 1;
	heap[(int)H] = 78;
	H = H + 1;
	heap[(int)H] = 68;
	H = H + 1;
	heap[(int)H] = 79;
	H = H + 1;
	heap[(int)H] = 32;
	H = H + 1;
	heap[(int)H] = 73;
	H = H + 1;
	heap[(int)H] = 70;
	H = H + 1;
	heap[(int)H] = 32;
	H = H + 1;
	heap[(int)H] = 73;
	H = H + 1;
	heap[(int)H] = 78;
	H = H + 1;
	heap[(int)H] = 67;
	H = H + 1;
	heap[(int)H] = 79;
	H = H + 1;
	heap[(int)H] = 82;
	H = H + 1;
	heap[(int)H] = 82;
	H = H + 1;
	heap[(int)H] = 69;
	H = H + 1;
	heap[(int)H] = 67;
	H = H + 1;
	heap[(int)H] = 84;
	H = H + 1;
	heap[(int)H] = 79;
	H = H + 1;
	heap[(int)H] = -1;
	H = H + 1;
	
	t66 = P + 2;
	t66 = t66 + 1;
	stack[(int)t66] = t65;
	P = P + 2;
	dbrust_printString();
	t67 = stack[(int)P];
	P = P - 2;
	printf("%c", 32);
	
	printf("%c", 10);
	P = P - 2;
	goto L23;
	L22:
	P = P + 2;
	t68 = H;
	heap[(int)H] = 83;
	H = H + 1;
	heap[(int)H] = 69;
	H = H + 1;
	heap[(int)H] = 71;
	H = H + 1;
	heap[(int)H] = 85;
	H = H + 1;
	heap[(int)H] = 78;
	H = H + 1;
	heap[(int)H] = 68;
	H = H + 1;
	heap[(int)H] = 79;
	H = H + 1;
	heap[(int)H] = 32;
	H = H + 1;
	heap[(int)H] = 73;
	H = H + 1;
	heap[(int)H] = 70;
	H = H + 1;
	heap[(int)H] = 32;
	H = H + 1;
	heap[(int)H] = 67;
	H = H + 1;
	heap[(int)H] = 79;
	H = H + 1;
	heap[(int)H] = 82;
	H = H + 1;
	heap[(int)H] = 82;
	H = H + 1;
	heap[(int)H] = 69;
	H = H + 1;
	heap[(int)H] = 67;
	H = H + 1;
	heap[(int)H] = 84;
	H = H + 1;
	heap[(int)H] = 79;
	H = H + 1;
	heap[(int)H] = -1;
	H = H + 1;
	
	t69 = P + 2;
	t69 = t69 + 1;
	stack[(int)t69] = t68;
	P = P + 2;
	dbrust_printString();
	t70 = stack[(int)P];
	P = P - 2;
	printf("%c", 32);
	
	printf("%c", 10);
	P = P - 2;
	goto L23;
	L23:
	goto L20;
	L20:
	P = P - 2;
	goto L15;
	L14:
	t73 = P - 0;
	t71 = t73 + 1;
	t72 = stack[(int)t71];
	t76 = P - 0;
	t74 = t76 + 0;
	t75 = stack[(int)t74];
	if(t72 == t75) goto L24;
	goto L25;
	L24:
	P = P + 2;
	t77 = H;
	heap[(int)H] = 80;
	H = H + 1;
	heap[(int)H] = 82;
	H = H + 1;
	heap[(int)H] = 73;
	H = H + 1;
	heap[(int)H] = 77;
	H = H + 1;
	heap[(int)H] = 69;
	H = H + 1;
	heap[(int)H] = 82;
	H = H + 1;
	heap[(int)H] = 32;
	H = H + 1;
	heap[(int)H] = 73;
	H = H + 1;
	heap[(int)H] = 70;
	H = H + 1;
	heap[(int)H] = 32;
	H = H + 1;
	heap[(int)H] = 73;
	H = H + 1;
	heap[(int)H] = 78;
	H = H + 1;
	heap[(int)H] = 67;
	H = H + 1;
	heap[(int)H] = 79;
	H = H + 1;
	heap[(int)H] = 82;
	H = H + 1;
	heap[(int)H] = 82;
	H = H + 1;
	heap[(int)H] = 69;
	H = H + 1;
	heap[(int)H] = 67;
	H = H + 1;
	heap[(int)H] = 84;
	H = H + 1;
	heap[(int)H] = 79;
	H = H + 1;
	heap[(int)H] = -1;
	H = H + 1;
	
	t78 = P + 2;
	t78 = t78 + 1;
	stack[(int)t78] = t77;
	P = P + 2;
	dbrust_printString();
	t79 = stack[(int)P];
	P = P - 2;
	printf("%c", 32);
	
	printf("%c", 10);
	goto L27;
	L27:
	t82 = P - 0;
	t80 = t82 + 1;
	t81 = stack[(int)t80];
	if(t81 == 1) goto L29;
	goto L30;
	L29:
	P = P + 2;
	t83 = H;
	heap[(int)H] = 83;
	H = H + 1;
	heap[(int)H] = 69;
	H = H + 1;
	heap[(int)H] = 71;
	H = H + 1;
	heap[(int)H] = 85;
	H = H + 1;
	heap[(int)H] = 78;
	H = H + 1;
	heap[(int)H] = 68;
	H = H + 1;
	heap[(int)H] = 79;
	H = H + 1;
	heap[(int)H] = 32;
	H = H + 1;
	heap[(int)H] = 73;
	H = H + 1;
	heap[(int)H] = 70;
	H = H + 1;
	heap[(int)H] = 32;
	H = H + 1;
	heap[(int)H] = 73;
	H = H + 1;
	heap[(int)H] = 78;
	H = H + 1;
	heap[(int)H] = 67;
	H = H + 1;
	heap[(int)H] = 79;
	H = H + 1;
	heap[(int)H] = 82;
	H = H + 1;
	heap[(int)H] = 82;
	H = H + 1;
	heap[(int)H] = 69;
	H = H + 1;
	heap[(int)H] = 67;
	H = H + 1;
	heap[(int)H] = 84;
	H = H + 1;
	heap[(int)H] = 79;
	H = H + 1;
	heap[(int)H] = -1;
	H = H + 1;
	
	t84 = P + 2;
	t84 = t84 + 1;
	stack[(int)t84] = t83;
	P = P + 2;
	dbrust_printString();
	t85 = stack[(int)P];
	P = P - 2;
	printf("%c", 32);
	
	printf("%c", 10);
	P = P - 2;
	goto L31;
	L30:
	L28:
	t88 = P - 0;
	t86 = t88 + 1;
	t87 = stack[(int)t86];
	if(t87 > 10) goto L32;
	goto L33;
	L32:
	P = P + 2;
	t89 = H;
	heap[(int)H] = 83;
	H = H + 1;
	heap[(int)H] = 69;
	H = H + 1;
	heap[(int)H] = 71;
	H = H + 1;
	heap[(int)H] = 85;
	H = H + 1;
	heap[(int)H] = 78;
	H = H + 1;
	heap[(int)H] = 68;
	H = H + 1;
	heap[(int)H] = 79;
	H = H + 1;
	heap[(int)H] = 32;
	H = H + 1;
	heap[(int)H] = 73;
	H = H + 1;
	heap[(int)H] = 70;
	H = H + 1;
	heap[(int)H] = 32;
	H = H + 1;
	heap[(int)H] = 73;
	H = H + 1;
	heap[(int)H] = 78;
	H = H + 1;
	heap[(int)H] = 67;
	H = H + 1;
	heap[(int)H] = 79;
	H = H + 1;
	heap[(int)H] = 82;
	H = H + 1;
	heap[(int)H] = 82;
	H = H + 1;
	heap[(int)H] = 69;
	H = H + 1;
	heap[(int)H] = 67;
	H = H + 1;
	heap[(int)H] = 84;
	H = H + 1;
	heap[(int)H] = 79;
	H = H + 1;
	heap[(int)H] = -1;
	H = H + 1;
	
	t90 = P + 2;
	t90 = t90 + 1;
	stack[(int)t90] = t89;
	P = P + 2;
	dbrust_printString();
	t91 = stack[(int)P];
	P = P - 2;
	printf("%c", 32);
	
	printf("%c", 10);
	P = P - 2;
	goto L34;
	L33:
	P = P + 2;
	t92 = H;
	heap[(int)H] = 83;
	H = H + 1;
	heap[(int)H] = 69;
	H = H + 1;
	heap[(int)H] = 71;
	H = H + 1;
	heap[(int)H] = 85;
	H = H + 1;
	heap[(int)H] = 78;
	H = H + 1;
	heap[(int)H] = 68;
	H = H + 1;
	heap[(int)H] = 79;
	H = H + 1;
	heap[(int)H] = 32;
	H = H + 1;
	heap[(int)H] = 73;
	H = H + 1;
	heap[(int)H] = 70;
	H = H + 1;
	heap[(int)H] = 32;
	H = H + 1;
	heap[(int)H] = 67;
	H = H + 1;
	heap[(int)H] = 79;
	H = H + 1;
	heap[(int)H] = 82;
	H = H + 1;
	heap[(int)H] = 82;
	H = H + 1;
	heap[(int)H] = 69;
	H = H + 1;
	heap[(int)H] = 67;
	H = H + 1;
	heap[(int)H] = 84;
	H = H + 1;
	heap[(int)H] = 79;
	H = H + 1;
	heap[(int)H] = -1;
	H = H + 1;
	
	t93 = P + 2;
	t93 = t93 + 1;
	stack[(int)t93] = t92;
	P = P + 2;
	dbrust_printString();
	t94 = stack[(int)P];
	P = P - 2;
	printf("%c", 32);
	
	printf("%c", 10);
	P = P - 2;
	goto L34;
	L34:
	goto L31;
	L31:
	P = P - 2;
	goto L26;
	L25:
	P = P + 2;
	P = P - 2;
	goto L26;
	L26:
	goto L15;
	L15:
	goto L4;
	L4:
	t95 = H;
	heap[(int)H] = -1;
	H = H + 1;
	
	t96 = P + 2;
	t96 = t96 + 1;
	stack[(int)t96] = t95;
	P = P + 2;
	dbrust_printString();
	t97 = stack[(int)P];
	P = P - 2;
	printf("%c", 32);
	
	printf("%c", 10);
	t98 = H;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = -1;
	H = H + 1;
	
	t99 = P + 2;
	t99 = t99 + 1;
	stack[(int)t99] = t98;
	P = P + 2;
	dbrust_printString();
	t100 = stack[(int)P];
	P = P - 2;
	printf("%c", 32);
	
	printf("%c", 10);
	t101 = H;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 87;
	H = H + 1;
	heap[(int)H] = 72;
	H = H + 1;
	heap[(int)H] = 73;
	H = H + 1;
	heap[(int)H] = 76;
	H = H + 1;
	heap[(int)H] = 69;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = -1;
	H = H + 1;
	
	t102 = P + 2;
	t102 = t102 + 1;
	stack[(int)t102] = t101;
	P = P + 2;
	dbrust_printString();
	t103 = stack[(int)P];
	P = P - 2;
	printf("%c", 32);
	
	printf("%c", 10);
	t104 = H;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = -1;
	H = H + 1;
	
	t105 = P + 2;
	t105 = t105 + 1;
	stack[(int)t105] = t104;
	P = P + 2;
	dbrust_printString();
	t106 = stack[(int)P];
	P = P - 2;
	printf("%c", 32);
	
	printf("%c", 10);
	t107 = P + 2;
	stack[(int)t107] = 0;
	
	//while quiero ver el 0 &&&
	L35:
	t110 = P - 0;
	t108 = t110 + 2;
	t109 = stack[(int)t108];
	if(t109 >= 0) goto L36;
	goto L37;
	L36:
	P = P + 3;
	t113 = P - 3;
	t111 = t113 + 2;
	t112 = stack[(int)t111];
	if(t112 == 0) goto L38;
	goto L39;
	L38:
	P = P + 0;
	t117 = P - 3;
	t115 = t117 + 2;
	t116 = stack[(int)t115];
	t118 = t116 + 100;
	t118 = (int)t118;
	t120 = P - 3;
	t119 = t120 + 2;
	stack[(int)t119] = t118;
	P = P - 0;
	goto L40;
	L39:
	t123 = P - 3;
	t121 = t123 + 2;
	t122 = stack[(int)t121];
	if(t122 > 50) goto L41;
	goto L42;
	L41:
	P = P + 0;
	t127 = P - 3;
	t125 = t127 + 2;
	t126 = stack[(int)t125];
	if(2 != 0) goto L44;
	printf("%c", 77);
	printf("%c", 97);
	printf("%c", 116);
	printf("%c", 104);
	printf("%c", 69);
	printf("%c", 114);
	printf("%c", 114);
	printf("%c", 111);
	printf("%c", 114);
	t128 = 0  ;
	goto L45;
	L44:
	t128 = t126 / 2;
	t128 = (int)t128;
	L45:
	t129 = t128 - 25;
	t129 = (int)t129;
	t131 = P - 3;
	t130 = t131 + 2;
	stack[(int)t130] = t129;
	P = P - 0;
	goto L43;
	L42:
	P = P + 0;
	t135 = P - 3;
	t133 = t135 + 2;
	t134 = stack[(int)t133];
	if(2 != 0) goto L46;
	printf("%c", 77);
	printf("%c", 97);
	printf("%c", 116);
	printf("%c", 104);
	printf("%c", 69);
	printf("%c", 114);
	printf("%c", 114);
	printf("%c", 111);
	printf("%c", 114);
	t136 = 0  ;
	goto L47;
	L46:
	t136 = t134 / 2;
	t136 = (int)t136;
	L47:
	t137 = t136 - 1;
	t137 = (int)t137;
	t139 = P - 3;
	t138 = t139 + 2;
	stack[(int)t138] = t137;
	P = P - 0;
	goto L43;
	L43:
	goto L40;
	L40:
	t142 = P - 3;
	t140 = t142 + 2;
	t141 = stack[(int)t140];
	printf("%d", (int)t141);
	printf("%c", 32);
	
	printf("%c", 10);
	P = P - 3;
	goto L35;
	L37:
	t143 = H;
	heap[(int)H] = -1;
	H = H + 1;
	
	t144 = P + 3;
	t144 = t144 + 1;
	stack[(int)t144] = t143;
	P = P + 3;
	dbrust_printString();
	t145 = stack[(int)P];
	P = P - 3;
	printf("%c", 32);
	
	printf("%c", 10);
	t146 = H;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = -1;
	H = H + 1;
	
	t147 = P + 3;
	t147 = t147 + 1;
	stack[(int)t147] = t146;
	P = P + 3;
	dbrust_printString();
	t148 = stack[(int)P];
	P = P - 3;
	printf("%c", 32);
	
	printf("%c", 10);
	t149 = H;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 70;
	H = H + 1;
	heap[(int)H] = 79;
	H = H + 1;
	heap[(int)H] = 82;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = -1;
	H = H + 1;
	
	t150 = P + 3;
	t150 = t150 + 1;
	stack[(int)t150] = t149;
	P = P + 3;
	dbrust_printString();
	t151 = stack[(int)P];
	P = P - 3;
	printf("%c", 32);
	
	printf("%c", 10);
	t152 = H;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = -1;
	H = H + 1;
	
	t153 = P + 3;
	t153 = t153 + 1;
	stack[(int)t153] = t152;
	P = P + 3;
	dbrust_printString();
	t154 = stack[(int)P];
	P = P - 3;
	printf("%c", 32);
	
	printf("%c", 10);
	if(0 > 9) goto L49;
	P = P + 3;
	t155 = 0 - 1;
	stack[(int)P] = t155;
	L50:
	t155 = stack[(int)P];
	t155 = t155 + 1;
	stack[(int)P] = t155;
	if(t155 > 9) goto L48;
	t157 = H;
	heap[(int)H] = -1;
	H = H + 1;
	
	t156 = P + 1;
	stack[(int)t156] = t157;
	
	t160 = P - 0;
	t158 = t160 + 0;
	t159 = stack[(int)t158];
	t161 = 10 - t159;
	t161 = (int)t161;
	if(0 > t161) goto L52;
	P = P + 2;
	t162 = 0 - 1;
	stack[(int)P] = t162;
	L53:
	t162 = stack[(int)P];
	t162 = t162 + 1;
	stack[(int)P] = t162;
	if(t162 > t161) goto L51;
	t166 = P - 2;
	t164 = t166 + 1;
	t165 = stack[(int)t164];
	t167 = H;
	heap[(int)H] = 32;
	H = H + 1;
	heap[(int)H] = -1;
	H = H + 1;
	
	t169 = H;
	L55:
	t170 = heap[(int)t165];
	t165 = t165 + 1;
	if(t170 == -1) goto L54;
	heap[(int)H] = t170;
	H = H + 1;
	goto L55;
	L54:
	t170 = heap[(int)t167];
	t167 = t167 + 1;
	if(t170 == -1) goto L56;
	heap[(int)H] = t170;
	H = H + 1;
	goto L54;
	L56:
	heap[(int)H] = -1;
	H = H + 1;
	
	t172 = P - 2;
	t171 = t172 + 1;
	stack[(int)t171] = t169;
	goto L53;
	L51:
	P = P - 2;
	L52:
	t175 = P - 0;
	t173 = t175 + 0;
	t174 = stack[(int)t173];
	if(0 > t174) goto L58;
	P = P + 2;
	t176 = 0 - 1;
	stack[(int)P] = t176;
	L59:
	t176 = stack[(int)P];
	t176 = t176 + 1;
	stack[(int)P] = t176;
	if(t176 > t174) goto L57;
	t180 = P - 2;
	t178 = t180 + 1;
	t179 = stack[(int)t178];
	t181 = H;
	heap[(int)H] = 42;
	H = H + 1;
	heap[(int)H] = 32;
	H = H + 1;
	heap[(int)H] = -1;
	H = H + 1;
	
	t183 = H;
	L61:
	t184 = heap[(int)t179];
	t179 = t179 + 1;
	if(t184 == -1) goto L60;
	heap[(int)H] = t184;
	H = H + 1;
	goto L61;
	L60:
	t184 = heap[(int)t181];
	t181 = t181 + 1;
	if(t184 == -1) goto L62;
	heap[(int)H] = t184;
	H = H + 1;
	goto L60;
	L62:
	heap[(int)H] = -1;
	H = H + 1;
	
	t186 = P - 2;
	t185 = t186 + 1;
	stack[(int)t185] = t183;
	goto L59;
	L57:
	P = P - 2;
	L58:
	t189 = P - 0;
	t187 = t189 + 1;
	t188 = stack[(int)t187];
	t190 = P + 2;
	t190 = t190 + 1;
	stack[(int)t190] = t188;
	P = P + 2;
	dbrust_printString();
	t191 = stack[(int)P];
	P = P - 2;
	printf("%c", 32);
	
	printf("%c", 10);
	goto L50;
	L48:
	P = P - 3;
	L49:
	t192 = H;
	heap[(int)H] = -1;
	H = H + 1;
	
	t193 = P + 3;
	t193 = t193 + 1;
	stack[(int)t193] = t192;
	P = P + 3;
	dbrust_printString();
	t194 = stack[(int)P];
	P = P - 3;
	printf("%c", 32);
	
	printf("%c", 10);
	t195 = H;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = -1;
	H = H + 1;
	
	t196 = P + 3;
	t196 = t196 + 1;
	stack[(int)t196] = t195;
	P = P + 3;
	dbrust_printString();
	t197 = stack[(int)P];
	P = P - 3;
	printf("%c", 32);
	
	printf("%c", 10);
	t198 = H;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 71;
	H = H + 1;
	heap[(int)H] = 85;
	H = H + 1;
	heap[(int)H] = 65;
	H = H + 1;
	heap[(int)H] = 82;
	H = H + 1;
	heap[(int)H] = 68;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = -1;
	H = H + 1;
	
	t199 = P + 3;
	t199 = t199 + 1;
	stack[(int)t199] = t198;
	P = P + 3;
	dbrust_printString();
	t200 = stack[(int)P];
	P = P - 3;
	printf("%c", 32);
	
	printf("%c", 10);
	t201 = H;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = -1;
	H = H + 1;
	
	t202 = P + 3;
	t202 = t202 + 1;
	stack[(int)t202] = t201;
	P = P + 3;
	dbrust_printString();
	t203 = stack[(int)P];
	P = P - 3;
	printf("%c", 32);
	
	printf("%c", 10);
	t204 = P + 3;
	stack[(int)t204] = 2;
	
	//while quiero ver el 0 &&&
	L63:
	t207 = P - 0;
	t205 = t207 + 3;
	t206 = stack[(int)t205];
	if(t206 <= 10) goto L64;
	goto L65;
	L64:
	P = P + 4;
	t210 = P - 4;
	t208 = t210 + 3;
	t209 = stack[(int)t208];
	t211 = (int)t209 % (int)2;
	t211 = (int)t211;
	if(t211 == 0) goto L66;
	goto L67;
	L67:
	P = P + 0;
	t215 = P - 4;
	t213 = t215 + 3;
	t214 = stack[(int)t213];
	t216 = t214 + 1;
	t216 = (int)t216;
	t218 = P - 4;
	t217 = t218 + 3;
	stack[(int)t217] = t216;
	P = P - 0;
	goto L68;
	L66:
	L68:
	t221 = P - 4;
	t219 = t221 + 3;
	t220 = stack[(int)t219];
	printf("%d", (int)t220);
	printf("%c", 32);
	
	printf("%c", 10);
	t225 = P - 4;
	t223 = t225 + 3;
	t224 = stack[(int)t223];
	t226 = t224 + 1;
	t226 = (int)t226;
	t228 = P - 4;
	t227 = t228 + 3;
	stack[(int)t227] = t226;
	P = P - 4;
	goto L63;
	L65:
	t229 = H;
	heap[(int)H] = -1;
	H = H + 1;
	
	t230 = P + 4;
	t230 = t230 + 1;
	stack[(int)t230] = t229;
	P = P + 4;
	dbrust_printString();
	t231 = stack[(int)P];
	P = P - 4;
	printf("%c", 32);
	
	printf("%c", 10);
	t232 = H;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = -1;
	H = H + 1;
	
	t233 = P + 4;
	t233 = t233 + 1;
	stack[(int)t233] = t232;
	P = P + 4;
	dbrust_printString();
	t234 = stack[(int)P];
	P = P - 4;
	printf("%c", 32);
	
	printf("%c", 10);
	t235 = H;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 83;
	H = H + 1;
	heap[(int)H] = 87;
	H = H + 1;
	heap[(int)H] = 73;
	H = H + 1;
	heap[(int)H] = 84;
	H = H + 1;
	heap[(int)H] = 67;
	H = H + 1;
	heap[(int)H] = 72;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = -1;
	H = H + 1;
	
	t236 = P + 4;
	t236 = t236 + 1;
	stack[(int)t236] = t235;
	P = P + 4;
	dbrust_printString();
	t237 = stack[(int)P];
	P = P - 4;
	printf("%c", 32);
	
	printf("%c", 10);
	t238 = H;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = 61;
	H = H + 1;
	heap[(int)H] = -1;
	H = H + 1;
	
	t239 = P + 4;
	t239 = t239 + 1;
	stack[(int)t239] = t238;
	P = P + 4;
	dbrust_printString();
	t240 = stack[(int)P];
	P = P - 4;
	printf("%c", 32);
	
	printf("%c", 10);
	t241 = P + 4;
	stack[(int)t241] = 4;
	
	t244 = P - 0;
	t242 = t244 + 4;
	t243 = stack[(int)t242];
	goto L69;
	L71:
	t245 = H;
	heap[(int)H] = 85;
	H = H + 1;
	heap[(int)H] = 110;
	H = H + 1;
	heap[(int)H] = 111;
	H = H + 1;
	heap[(int)H] = -1;
	H = H + 1;
	
	t246 = P + 0;
	t246 = t246 + 1;
	stack[(int)t246] = t245;
	P = P + 0;
	dbrust_printString();
	t247 = stack[(int)P];
	P = P - 0;
	printf("%c", 32);
	
	printf("%c", 10);
	goto L70;
	L72:
	t248 = H;
	heap[(int)H] = 68;
	H = H + 1;
	heap[(int)H] = 111;
	H = H + 1;
	heap[(int)H] = 115;
	H = H + 1;
	heap[(int)H] = -1;
	H = H + 1;
	
	t249 = P + 0;
	t249 = t249 + 1;
	stack[(int)t249] = t248;
	P = P + 0;
	dbrust_printString();
	t250 = stack[(int)P];
	P = P - 0;
	printf("%c", 32);
	
	printf("%c", 10);
	goto L70;
	L73:
	t251 = H;
	heap[(int)H] = 84;
	H = H + 1;
	heap[(int)H] = 114;
	H = H + 1;
	heap[(int)H] = 101;
	H = H + 1;
	heap[(int)H] = 115;
	H = H + 1;
	heap[(int)H] = -1;
	H = H + 1;
	
	t252 = P + 0;
	t252 = t252 + 1;
	stack[(int)t252] = t251;
	P = P + 0;
	dbrust_printString();
	t253 = stack[(int)P];
	P = P - 0;
	printf("%c", 32);
	
	printf("%c", 10);
	goto L70;
	L74:
	t254 = H;
	heap[(int)H] = 73;
	H = H + 1;
	heap[(int)H] = 110;
	H = H + 1;
	heap[(int)H] = 118;
	H = H + 1;
	heap[(int)H] = 97;
	H = H + 1;
	heap[(int)H] = 108;
	H = H + 1;
	heap[(int)H] = 105;
	H = H + 1;
	heap[(int)H] = 100;
	H = H + 1;
	heap[(int)H] = 32;
	H = H + 1;
	heap[(int)H] = 100;
	H = H + 1;
	heap[(int)H] = 97;
	H = H + 1;
	heap[(int)H] = 121;
	H = H + 1;
	heap[(int)H] = -1;
	H = H + 1;
	
	t255 = P + 0;
	t255 = t255 + 1;
	stack[(int)t255] = t254;
	P = P + 0;
	dbrust_printString();
	t256 = stack[(int)P];
	P = P - 0;
	printf("%c", 32);
	
	printf("%c", 10);
	goto L70;
	L69:
	if(t243 == 1) goto L71;
	if(t243 == 2) goto L72;
	if(t243 == 3) goto L73;
	goto L74;
	L70:

	return 0;
}
